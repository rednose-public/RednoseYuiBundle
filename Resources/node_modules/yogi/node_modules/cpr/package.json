{
  "name": "cpr",
  "description": "cp -R",
  "author": {
    "name": "Dav Glass",
    "email": "davglass@gmail.com"
  },
  "version": "0.0.6",
  "dependencies": {
    "graceful-fs": "~1.1.14",
    "rimraf": "~2.0.2",
    "mkdirp": "~0.3.4"
  },
  "main": "./lib/index.js",
  "devDependencies": {
    "jshint": "~0.9.1",
    "yui-lint": "~0.1.0",
    "istanbul": "~0.1.8",
    "vows": "*"
  },
  "keywords": [
    "copy",
    "recursive"
  ],
  "scripts": {
    "pretest": "jshint --config ./node_modules/yui-lint/jshint.json ./lib/",
    "windows-test": "vows --spec ./tests/full.js",
    "test": "istanbul cover --print both -- vows --spec ./tests/full.js"
  },
  "bugs": {
    "url": "http://github.com/davglass/cpr/issues"
  },
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/davglass/cpr/blob/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/davglass/cpr.git"
  },
  "readme": "CPR (cp -R)\n===========\n\nThere are other modules out there that attempt this,\nbut none did it the way I needed it to be done or\nthey had issues and the author failed to fix them in a\ntimely manner.\n\n\nInstall\n-------\n\n    npm install cpr\n\n\nBuild Status\n------------\n\n[![Build Status](https://secure.travis-ci.org/davglass/cpr.png)](http://travis-ci.org/davglass/cpr)\n\nUsage\n-----\n\n    var cpr = require('cpr').cpr;\n\n    cpr('/path/from', '/path/to', {\n        deleteFirst: true, //Delete \"to\" before\n        overwrite: true, //If the file exists, overwrite it\n        confirm: true //After the copy, stat all the copied files to make sure they are there\n    }, function(errs, files) {\n        //errs - Array of errors that occurred\n        //files - List of files that we copied\n    });\n\n    cpr('/path/from', '/path/to', function(errs, files) {\n        //errs - Array of errors that occurred\n        //files - List of files that we copied\n    });\n\n\nOptions\n-------\n\n   * `deleteFirst`: Delete the to directory with `rimraf`\n   * `overwrite`: If the destination exists, overwrite it\n   * `confirm`: After the copy operation, stat all the files and report errors if any are missing\n   * `filter`: `RegExp` or `function` to test each file against before copying\n\n\nFiltering\n---------\n\nIf you give it a `RegExp`, it will use that to `test` the filename as they are being gathered. If it passes, it will be removed.\nIf you give it a `function`, it will use that with `Array.filter` on the list of files.\n",
  "readmeFilename": "README.md",
  "_id": "cpr@0.0.6",
  "_from": "cpr@~0.0.3"
}
